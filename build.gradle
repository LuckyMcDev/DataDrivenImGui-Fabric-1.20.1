plugins {
	id 'fabric-loom' version '1.9.2'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
	maven {
		// Shedaniel's maven (Architectury API)
		url = "https://maven.architectury.dev"
	}

	maven {
		url "https://maven.blamejared.com"
		content {
			includeGroup "com.faux.ingredientextension"
		}
	}
	maven {
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	maven {
		url 'https://maven.shedaniel.me/'
	}

	// saps.dev Maven (KubeJS and Rhino)
	maven {
		url = "https://maven.saps.dev/minecraft"
		content {
			includeGroup "dev.latvian.mods"
		}
	}

	mavenCentral()
}

configurations {
	implementation.extendsFrom lib
	api.extendsFrom lib
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	lib "io.github.spair:imgui-java-binding:${project.imgui_version}"
	lib "io.github.spair:imgui-java-lwjgl3:${project.imgui_version}"

	lib "io.github.spair:imgui-java-natives-windows:${project.imgui_version}"
	lib "io.github.spair:imgui-java-natives-linux:${project.imgui_version}"

	// KubeJS
	modImplementation("dev.latvian.mods:kubejs-fabric:${kubejs_version}")

	// Arch
	modApi "dev.architectury:architectury-fabric:${architectury_version}"
}

base {
	archivesName = project.archives_base_name
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	dependsOn configurations.lib
	from {
		duplicatesStrategy = DuplicatesStrategy.EXCLUDE
		configurations.lib.collect {
			zipTree(it)
		}
	}
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
	}
}
